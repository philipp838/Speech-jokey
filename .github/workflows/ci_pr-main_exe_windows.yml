name: Windows Build on Pull Request

on:
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          .github
          src
          pyproject.toml
          poetry.lock
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Execute script to .exe in Windows
      run: ".github/scripts/windows/build_exe_onefile.ps1"
      shell: powershell -Command "& '{0}'"
      
    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'SpeechJokey.zip'
        directory: dist
        path: SpeechJokey/
               
    - uses: actions/upload-artifact@v4
      with:
        name: SpeechJokey-windows-x86_64
        path: dist/SpeechJokey.zip

    # Will be enabled again once we have a first pre-release with meaningful changes
    # - name: Generate Changelog
    #   id: changelog
    #   uses: mikepenz/release-changelog-builder-action@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # **Changelog:**
    # ${{ steps.changelog.outputs.changelog }}
#
#   - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#         tag_name: pre-release-${{ github.ref_name }}-${{ github.sha }}-${{ github.run_number }}
#          release_name: SpeechJokey Build (Windows) - ${{ github.ref_name }} @ ${{ github.sha }}
#          body: |
#            **Build Details:**
#            - **Branch:** ${{ github.ref_name }}
#            - **Commit:** ${{ github.sha }}
#            - **Build Number:** ${{ github.run_number }}
#            - **Build Date:** ${{ github.event.head_commit.timestamp }}
#          draft: false
#          prerelease: true          
#    - name: Upload Release Asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: dist/SpeechJokey.zip
#        asset_name: SpeechJokey-windows-x86_64.zip
#        asset_content_type: application/zip
